"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/translate";
exports.ids = ["pages/api/translate"];
exports.modules = {

/***/ "(api)/./data/en.json":
/*!**********************!*\
  !*** ./data/en.json ***!
  \**********************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"medicalTerms":["hypertension","diabetes","myocardial infarction","hyperlipidemia","osteoporosis","gastroesophageal reflux","antibiotics","analgesics","anti-inflammatory","pulmonary embolism"]}');

/***/ }),

/***/ "(api)/./data/es.json":
/*!**********************!*\
  !*** ./data/es.json ***!
  \**********************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"medicalTerms":["hipertensión","diabetes","infarto de miocardio","hiperlipidemia","osteoporosis","reflujo gastroesofágico","antibióticos","analgésicos","antiinflamatorio","embolia pulmonar"]}');

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftranslate&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Ctranslate.ts&middlewareConfigBase64=e30%3D!":
/*!************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftranslate&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Ctranslate.ts&middlewareConfigBase64=e30%3D! ***!
  \************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_translate_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\translate.ts */ \"(api)/./pages/api/translate.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_translate_ts__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_translate_ts__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/translate\",\n        pathname: \"/api/translate\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_translate_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnRyYW5zbGF0ZSZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTVDYXBpJTVDdHJhbnNsYXRlLnRzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUErRjtBQUN2QztBQUNFO0FBQzFEO0FBQ3VEO0FBQ3ZEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyxvREFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsb0RBQVE7QUFDcEM7QUFDTyx3QkFBd0IseUdBQW1CO0FBQ2xEO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlc1xcXFxhcGlcXFxcdHJhbnNsYXRlLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsICdkZWZhdWx0Jyk7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCAnY29uZmlnJyk7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS90cmFuc2xhdGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS90cmFuc2xhdGVcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiAnJyxcbiAgICAgICAgZmlsZW5hbWU6ICcnXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftranslate&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Ctranslate.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/translate.ts":
/*!********************************!*\
  !*** ./pages/api/translate.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _data_en_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../data/en.json */ \"(api)/./data/en.json\");\n/* harmony import */ var _data_es_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../data/es.json */ \"(api)/./data/es.json\");\n\n\n// Helper function to sanitize sensitive input\nfunction sanitizeInput(text) {\n    // Example: remove any \"patient: <word>\" patterns\n    return text.replace(/(patient:\\s*\\w+)/gi, \"patient: [redacted]\");\n}\n// Load glossaries from JSON files\nconst MEDICAL_GLOSSARY = {\n    en: _data_en_json__WEBPACK_IMPORTED_MODULE_0__,\n    es: _data_es_json__WEBPACK_IMPORTED_MODULE_1__\n};\n// Validation patterns\nconst DOSAGE_REGEX = /(\\d+\\s*(mg|mL|g|μg|mcg|IU)\\b)/gi;\nconst ANATOMICAL_TERMS = [\n    \"heart\",\n    \"liver\",\n    \"kidney\"\n]; // Expand with more terms\nasync function handler(req, res) {\n    if (req.method !== 'POST') {\n        return res.status(405).json({\n            error: 'Method not allowed'\n        });\n    }\n    const { text, targetLang } = req.body;\n    if (!text || !targetLang) {\n        return res.status(400).json({\n            error: 'Missing required fields'\n        });\n    }\n    try {\n        // Sanitize input to remove sensitive data\n        const sanitizedText = sanitizeInput(text);\n        // Pre-process the text using the English glossary\n        const { processedText, glossaryTerms } = preProcessText(sanitizedText, targetLang);\n        // Try primary translation model\n        let result = await translateWithModel(processedText, targetLang, 'llama3-70b-8192');\n        // Fallback to secondary model if needed\n        if (!result.translatedText) {\n            result = await translateWithModel(processedText, targetLang, 'mixtral-8x7b-32768');\n        }\n        // Post-process the translation to restore glossary terms in the target language\n        const finalTranslation = postProcessText(result.translatedText, glossaryTerms, targetLang);\n        // Validate the translation and produce warnings if necessary\n        const warnings = validateTranslation(sanitizedText, finalTranslation, targetLang);\n        res.status(200).json({\n            translatedText: finalTranslation,\n            warnings,\n            modelUsed: result.modelUsed\n        });\n    } catch (error) {\n        console.error(\"Translation error:\", error);\n        res.status(500).json({\n            error: 'Translation failed'\n        });\n    }\n}\n// --- Helper Functions ---\nasync function translateWithModel(text, targetLang, model) {\n    try {\n        const response = await fetch('https://api.groq.com/openai/v1/chat/completions', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${process.env.GROQ_API_KEY}`\n            },\n            body: JSON.stringify({\n                model,\n                messages: [\n                    {\n                        role: \"system\",\n                        content: `Translate medical text to ${targetLang} exactly. Preserve numbers, units, and medical terms.`\n                    },\n                    {\n                        role: \"user\",\n                        content: text\n                    }\n                ],\n                temperature: 0.1,\n                max_tokens: 1024\n            })\n        });\n        const data = await response.json();\n        return {\n            translatedText: data.choices?.[0]?.message?.content?.trim() || '',\n            modelUsed: model\n        };\n    } catch (error) {\n        console.error(`Error with model ${model}:`, error);\n        return {\n            translatedText: '',\n            modelUsed: model\n        };\n    }\n}\nfunction preProcessText(text, targetLang) {\n    const glossaryTerms = [];\n    let processedText = text;\n    // Use the English glossary for placeholders\n    const sourceGlossary = MEDICAL_GLOSSARY['en'] || {};\n    Object.entries(sourceGlossary).forEach(([term])=>{\n        if (processedText.toLowerCase().includes(term.toLowerCase())) {\n            const placeholder = `GLOSSARY_${term.toUpperCase()}`;\n            processedText = processedText.replace(new RegExp(term, 'gi'), placeholder);\n            glossaryTerms.push(placeholder);\n        }\n    });\n    return {\n        processedText,\n        glossaryTerms\n    };\n}\nfunction postProcessText(text, glossaryTerms, targetLang) {\n    let processedText = text;\n    // Replace placeholders with target language terms\n    glossaryTerms.forEach((placeholder)=>{\n        const term = placeholder.replace('GLOSSARY_', '').toLowerCase();\n        const translatedTerm = MEDICAL_GLOSSARY[targetLang]?.[term] || term;\n        processedText = processedText.replace(new RegExp(placeholder, 'gi'), translatedTerm);\n    });\n    return processedText;\n}\nfunction validateTranslation(source, translation, targetLang) {\n    const warnings = [];\n    // Validate dosages\n    const sourceDosages = source.match(DOSAGE_REGEX) || [];\n    const translatedDosages = translation.match(DOSAGE_REGEX) || [];\n    if (sourceDosages.join(',') !== translatedDosages.join(',')) {\n        warnings.push('Potential dosage discrepancy detected');\n    }\n    // Validate anatomical terms\n    ANATOMICAL_TERMS.forEach((term)=>{\n        if (source.toLowerCase().includes(term) && !translation.toLowerCase().includes(MEDICAL_GLOSSARY[targetLang]?.[term] || term)) {\n            warnings.push(`Anatomical term '${term}' might be mistranslated`);\n        }\n    });\n    // Validate units\n    const invalidUnits = (translation.match(/(mg|mL|g)/gi) || []).filter((unit)=>![\n            'mg',\n            'mL',\n            'g'\n        ].includes(unit.toLowerCase()));\n    if (invalidUnits.length > 0) {\n        warnings.push(`Invalid units detected: ${invalidUnits.join(', ')}`);\n    }\n    return warnings;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/translate.ts\n");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftranslate&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Ctranslate.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();